{"version":3,"sources":["Footer.jsx","TodoItem.jsx","TodosList.jsx","AddTodo.jsx","App.jsx","index.js"],"names":["Footer","props","handleFilter","activeFilter","todos","handleTodoDeleteCompleted","activeTodos","filter","todo","completed","length","todoCompleted","react_default","a","createElement","className","style","display","href","classnames","selected","name","onClick","hidden","clear-completed","type","TodoItem","handleDelete","handleComplete","id","onChange","checked","htmlFor","text","TodoList","displayedTodos","handleTodoDelete","handleCompleteAll","map","src_TodoItem","key","AddTodo","state","errorsList","handleTodoInput","event","_this","setState","target","value","handleTodoAdd","preventDefault","prevState","Date","now","resetState","this","placeholder","onKeyPress","React","Component","App","newTodo","concat","Object","toConsumableArray","todoId","handleToggleCompleting","objectSpread","handleToggleCompletingAll","every","filterTodos","savedTodos","JSON","parse","localStorage","getItem","saveToLocalStorage","stringify","setItem","src_AddTodo","TodosList","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.271f13c1.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nconst Footer = ( props ) => {\n    const {\n      handleFilter,\n      activeFilter,\n      todos,\n      handleTodoDeleteCompleted\n          } = props;\n\n  const activeTodos = todos.filter(todo => (!todo.completed)).length;\n  const todoCompleted = todos.filter(todo => (todo.completed));\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {activeTodos} items left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a href=\"#/\" className={classnames({\n            selected: activeFilter === 'all',\n          })}\n          name='all'\n          onClick={handleFilter}\n          >All</a>\n        </li>\n\n        <li>\n          <a href=\"#/active\"\n          className={classnames({\n            selected: activeFilter === 'active',\n          })}\n          name='active'\n          onClick={handleFilter}>Active</a>\n        </li>\n\n        <li>\n          <a href=\"#/completed\"\n          className={classnames({\n            selected: activeFilter === 'completed',\n          })}\n          name='completed'\n          onClick={handleFilter}>Completed</a>\n        </li>\n\n        <li className={classnames({\n            'hidden': todoCompleted.length === 0,\n            'selected': todoCompleted.length > 0,\n            'clear-completed': true,\n          })}>\n          <a href=\"#/deleted\"\n            className={classnames({\n              'selected': activeFilter === 'deleted',\n\n            })}\n            name='deleted'\n            onClick={() => handleTodoDeleteCompleted(todoCompleted)}>\n              Clear completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n      />\n    </footer>\n\n  )\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst TodoItem = (props) => {\n  const {\n    todo,\n    handleDelete,\n    handleComplete\n        } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      <li  className={todo.completed ? 'completed' : ''}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={todo.id}\n            onChange={() => handleComplete(todo.id)}\n            checked={todo.completed}\n\n          />\n          <label htmlFor=\"todo\">\n            {todo.text}\n          </label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => handleDelete(todo.id)}\n            />\n        </div>\n      </li>\n    </ul>\n  )\n};\n\nexport default TodoItem;\n","import React from 'react';\n\nimport TodoItem from './TodoItem';\n\nconst TodoList = (props) => {\n  const {\n    displayedTodos,\n    handleTodoDelete,\n    handleComplete,\n    handleCompleteAll\n        } = props;\n\n  return (\n    <section className=\"main\" style={{ display: 'block' }}>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onClick={handleCompleteAll}\n      />\n      <label htmlFor=\"toggle-all\">\n        Mark all as complete\n      </label>\n       {displayedTodos.map(todo =>\n        (<TodoItem\n            todo={todo}\n            key={todo.id + 1}\n            handleDelete={() => handleTodoDelete(todo.id)}\n            handleComplete={handleComplete}\n          />\n        ))}\n    </section>\n    )\n  };\n\nexport default TodoList;\n","import React from 'react';\n\nclass AddTodo extends React.Component {\n  state = {\n    text: '',\n    errorsList: '',\n  }\n\n  handleTodoInput = (event) => {\n    this.setState({\n     text: event.target.value,\n     errorsList: false,\n    });\n  };\n\n  handleTodoAdd = (event) => {\n    const {handleTodoAdd} = this.props\n    let {errorsList} = this.state;\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      this.setState ((prevState => {\n        if (!prevState.text) {\n          errorsList = true;\n        }\n        if (errorsList) {\n          return { errorsList };\n        }\n      handleTodoAdd({\n        text: this.state.text,\n        id: Date.now(),\n        completed: false,\n      });\n    }))\n      this.resetState();\n    }\n   };\n\n  resetState() {\n    this.setState({\n      text: '',\n\n    });\n  };\n\n  render () {\n    const { errorsList } = this.state;\n    return (\n      <form>\n        <input\n          className=\"new-todo\"\n          placeholder={ errorsList\n            ? \"Enter the todo first\"\n            : \"What needs to be done?\" }\n          value={this.state.text}\n          onChange={this.handleTodoInput}\n          onKeyPress={this.handleTodoAdd}\n        />\n      </form>\n    )\n  };\n}\n\nexport default AddTodo;\n","import React from 'react';\n\nimport Footer from './Footer';\nimport TodoList from './TodosList';\nimport AddTodo from './AddTodo';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    activeFilter: 'all',\n  };\n\n  componentDidMount() {\n    const savedTodos = JSON.parse(localStorage.getItem('todos'));\n      if (savedTodos){\n        this.setState({todos: savedTodos});\n      }\n  };\n\n  componentDidUpdate(prevState) {\n    if (prevState.todos !== this.state.todos){\n      this.saveToLocalStorage();\n    }\n  };\n\n  handleTodoAdd = (newTodo) => {\n    this.setState(prevState => ({\n      todos: [ newTodo, ...prevState.todos]\n    }));\n  };\n\n  handleTodoDelete = (todoId) => {\n    this.setState({\n        todos: this.state.todos.filter(todo => todo.id !== todoId)\n    });\n  };\n\n  handleTodoDeleteCompleted = (todoCompleted) => {\n    this.setState({\n        todos: this.state.todos.filter(todo => todo.completed === !todoCompleted)\n    });\n  };\n\n  handleToggleCompleting = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => {\n        if (todo.id !== id) {\n          return todo;\n  }\n      return {\n        ...todo,\n        completed: !todo.completed,\n      };\n      }),\n    }));\n  };\n\n  handleToggleCompletingAll = () => {\n    this.setState((prevState) => {\n      if (prevState.todos.every(todo => todo.completed)) {\n        return {\n          todos: prevState.todos.map(todo => ({\n            ...todo,\n            completed: !todo.completed,\n          })),\n        };\n      }\n      return {\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      };\n    });\n  };\n\n  saveToLocalStorage() {\n    const todos = JSON.stringify(this.state.todos);\n    localStorage.setItem('todos', todos);\n  };\n\n  handleFilter = (event) => {\n    this.setState({\n      activeFilter: event.target.name,\n    })\n  };\n\n   filterTodos = (activeFilter) => {\n    const { todos } = this.state;\n\n     if (activeFilter === 'active') {\n      return todos.filter(todo => todo.completed === false);\n    }\n\n     if (activeFilter === 'completed') {\n      return todos.filter(todo => todo.completed === true);\n    }\n    return todos;\n  };\n\n  render () {\n    const {activeFilter} = this.state;\n    const displayedTodos = this.filterTodos(activeFilter);\n    return (\n      <section className=\"todoapp\">\n       <header className=\"header\">\n        <h1>todos</h1>\n        </header>\n\n        <AddTodo\n          handleTodoAdd={this.handleTodoAdd}\n        />\n\n        <TodoList\n          handleTodoDelete={this.handleTodoDelete}\n          handleComplete={this.handleToggleCompleting}\n          handleCompleteAll={this.handleToggleCompletingAll}\n          displayedTodos={displayedTodos}\n        />\n\n        <Footer\n          handleFilter={this.handleFilter}\n          activeFilter={activeFilter}\n          todos={displayedTodos}\n          handleTodoDeleteCompleted={this.handleTodoDeleteCompleted}\n        />\n\n      </section>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}