{"version":3,"sources":["Footer.jsx","TodoItem.jsx","TodosList.jsx","AddTodo.jsx","App.jsx","index.js"],"names":["Footer","props","handleFilter","activeFilter","todos","handleTodoDeleteCompleted","activeTodos","filter","todo","completed","length","todoCompleted","react_default","a","createElement","className","style","display","href","classnames","selected","name","onClick","hidden","clear-completed","type","TodoItem","state","text","_this","isEditing","handleTodoInput","event","setState","target","value","replace","changeEditModeByKey","key","changeEditMode","prevState","_this2","this","_this$props","handleDelete","handleComplete","id","onChange","checked","onKeyPress","autoFocus","ref","inputRef","onBlur","htmlFor","onDoubleClick","React","Component","TodoList","displayedTodos","handleTodoDelete","handleCompleteAll","map","src_TodoItem","AddTodo","errorsList","handleTodoAdd","preventDefault","Date","now","resetState","placeholder","App","newTodo","concat","Object","toConsumableArray","todoId","handleToggleCompleting","objectSpread","handleToggleCompletingAll","every","filterTodos","savedTodos","JSON","parse","localStorage","getItem","saveToLocalStorage","stringify","setItem","src_AddTodo","TodosList","handleEdit","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f481beee.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst Footer = ( props ) => {\n    const {\n      handleFilter,\n      activeFilter,\n      todos,\n      handleTodoDeleteCompleted\n          } = props;\n\n  const activeTodos = todos.filter(todo => (!todo.completed)).length;\n  const todoCompleted = todos.filter(todo => (todo.completed));\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {activeTodos} items left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a href=\"#/\" className={classnames({\n            selected: activeFilter === 'all',\n          })}\n          name='all'\n          onClick={handleFilter}\n          >All</a>\n        </li>\n\n        <li>\n          <a href=\"#/active\"\n          className={classnames({\n            selected: activeFilter === 'active',\n          })}\n          name='active'\n          onClick={handleFilter}>Active</a>\n        </li>\n\n        <li>\n          <a href=\"#/completed\"\n          className={classnames({\n            selected: activeFilter === 'completed',\n          })}\n          name='completed'\n          onClick={handleFilter}>Completed</a>\n        </li>\n\n        <li className={classnames({\n            'hidden': todoCompleted.length === 0,\n            'selected': todoCompleted.length > 0,\n            'clear-completed': true,\n          })}>\n          <a href=\"#/deleted\"\n            className={classnames({\n              'selected': activeFilter === 'deleted',\n\n            })}\n            name='deleted'\n            onClick={() => handleTodoDeleteCompleted(todoCompleted)}>\n              Clear completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n      />\n    </footer>\n\n  )\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n  handleTodoDeleteCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\nstate = {\n  text: this.props.todo.text,\n  isEditing: false,\n}\n\nhandleTodoInput = (event) => {\n  this.setState({\n   text: event.target.value.replace(/[^ \\wа-яА-ЯІіЇїЁё]/g, ''),\n  });\n};\n\nchangeEditModeByKey = (event) => {\n  if (event.key === 'Enter') {\n    this.setState({\n      isEditing: false,\n    });\n  }\n};\n\nchangeEditMode = () => {\n  this.setState(prevState => ({\n    isEditing: !prevState.isEditing,\n  }));\n}\n\n  render() {\n    const {\n      todo,\n      handleDelete,\n      handleComplete,\n          } = this.props;\n\n    return (\n      <ul className=\"todo-list\">\n      <li  className={todo.completed ? 'completed' : 'editing'}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={todo.id}\n            onChange={() => handleComplete(todo.id)}\n            checked={todo.completed}\n          />\n          {this.state.isEditing ? (\n            <input\n              type=\"text\"\n              className=\"edit\"\n              value={this.state.text}\n              onChange={this.handleTodoInput}\n              onKeyPress={this.changeEditModeByKey}\n              autoFocus\n              ref={this.inputRef}\n              onBlur={this.changeEditMode}\n            />\n            ) : (\n            <label\n              htmlFor=\"todo\"\n              onDoubleClick={() => this.setState ({\n                isEditing: true,\n              })}>\n              {this.state.text}\n            </label>)}\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => handleDelete(todo.id)}\n            />\n        </div>\n      </li>\n    </ul>\n    )\n  };\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleComplete: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\n\nconst TodoList = (props) => {\n  const {\n    displayedTodos,\n    handleTodoDelete,\n    handleComplete,\n    handleCompleteAll,\n        } = props;\n\n  return (\n    <section className=\"main\" style={{ display: 'block' }}>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onClick={handleCompleteAll}\n      />\n      <label htmlFor=\"toggle-all\">\n        Mark all as complete\n      </label>\n       {displayedTodos.map(todo =>\n        (<TodoItem\n            todo={todo}\n            key={todo.id + 1}\n            handleDelete={handleTodoDelete}\n            handleComplete={handleComplete}\n          />\n        ))}\n    </section>\n    )\n  };\n\n  TodoList.propTypes = {\n    displayedTodos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    handleTodoDelete: PropTypes.func.isRequired,\n    handleComplete: PropTypes.func.isRequired,\n    handleCompleteAll: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddTodo extends React.Component {\n  state = {\n    text: '',\n    errorsList: '',\n  }\n\n  handleTodoInput = (event) => {\n    this.setState({\n     text: event.target.value.replace(/[^ \\wа-яА-ЯІіЇїЁё]/g, ''),\n     errorsList: false,\n    });\n  };\n\n  handleTodoAdd = (event) => {\n    const {handleTodoAdd} = this.props\n    let {errorsList} = this.state;\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      this.setState ((prevState => {\n        if (!prevState.text) {\n          errorsList = true;\n        }\n        if (errorsList) {\n          return { errorsList };\n        }\n      handleTodoAdd({\n        text: this.state.text,\n        id: Date.now(),\n        completed: false,\n      });\n    }))\n      this.resetState();\n    }\n   };\n\n  resetState() {\n    this.setState({\n      text: '',\n\n    });\n  };\n\n  render () {\n    const { errorsList } = this.state;\n    return (\n      <form>\n        <input\n          className=\"new-todo\"\n          placeholder={ errorsList\n            ? \"Enter the todo first\"\n            : \"What needs to be done?\" }\n          value={this.state.text}\n          onChange={this.handleTodoInput}\n          onKeyPress={this.handleTodoAdd}\n        />\n      </form>\n    )\n  };\n}\n\nAddTodo.propTypes = {\n  handleTodoAdd: PropTypes.func.isRequired,\n};\n\nexport default AddTodo;\n","import React from 'react';\n\nimport Footer from './Footer';\nimport TodoList from './TodosList';\nimport AddTodo from './AddTodo';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    activeFilter: 'all',\n  };\n\n  componentDidMount() {\n    const savedTodos = JSON.parse(localStorage.getItem('todos'));\n      if (savedTodos){\n        this.setState({todos: savedTodos});\n      }\n  };\n\n  componentDidUpdate(prevState) {\n    if (prevState.todos !== this.state.todos){\n      this.saveToLocalStorage();\n    }\n  };\n\n  handleTodoAdd = (newTodo) => {\n    this.setState(prevState => ({\n      todos: [ newTodo, ...prevState.todos]\n    }));\n  };\n\n  handleTodoDelete = (todoId) => {\n    this.setState({\n        todos: this.state.todos.filter(todo => todo.id !== todoId)\n    });\n  };\n\n  handleTodoDeleteCompleted = (todoCompleted) => {\n    this.setState({\n        todos: this.state.todos.filter(todo => todo.completed === !todoCompleted)\n    });\n  };\n\n  handleToggleCompleting = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => {\n        if (todo.id !== id) {\n          return todo;\n  }\n      return {\n        ...todo,\n        completed: !todo.completed,\n      };\n      }),\n    }));\n  };\n\n  handleToggleCompletingAll = () => {\n    this.setState((prevState) => {\n      if (prevState.todos.every(todo => todo.completed)) {\n        return {\n          todos: prevState.todos.map(todo => ({\n            ...todo,\n            completed: !todo.completed,\n          })),\n        };\n      }\n      return {\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      };\n    });\n  };\n\n  saveToLocalStorage() {\n    const todos = JSON.stringify(this.state.todos);\n    localStorage.setItem('todos', todos);\n  };\n\n  handleFilter = (event) => {\n    this.setState({\n      activeFilter: event.target.name,\n    })\n  };\n\n   filterTodos = (activeFilter) => {\n    const { todos } = this.state;\n\n     if (activeFilter === 'active') {\n      return todos.filter(todo => todo.completed === false);\n    }\n\n     if (activeFilter === 'completed') {\n      return todos.filter(todo => todo.completed === true);\n    }\n    return todos;\n  };\n\n  render () {\n    const {activeFilter} = this.state;\n    const displayedTodos = this.filterTodos(activeFilter);\n    return (\n      <section className=\"todoapp\">\n       <header className=\"header\">\n        <h1>todos</h1>\n        </header>\n\n        <AddTodo\n          handleTodoAdd={this.handleTodoAdd}\n        />\n\n        <TodoList\n          handleTodoDelete={this.handleTodoDelete}\n          handleComplete={this.handleToggleCompleting}\n          handleCompleteAll={this.handleToggleCompletingAll}\n          handleEdit={this.handleEdit}\n          displayedTodos={displayedTodos}\n        />\n\n        <Footer\n          handleFilter={this.handleFilter}\n          activeFilter={activeFilter}\n          todos={displayedTodos}\n          handleTodoDeleteCompleted={this.handleTodoDeleteCompleted}\n        />\n\n      </section>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}